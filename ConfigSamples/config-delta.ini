# For Prime alpha
[general]
grbl_mode = false
config-override = true
rpi_port_enable = false
rpi_baudrate = 115200

[motion control]
default_feed_rate = 15000         # Default speed (mm/minute) for G1/G2/G3 moves
default_seek_rate = 15000         # Default speed (mm/minute) for G0 moves
delta_segments_per_second = 100
mm_per_arc_segment = 0.0          # Fixed length for line segments that divide arcs, 0 to disable
mm_max_arc_error = 0.01           # The maximum error for line segments that divide arcs 0 to disable
arc_correction = 5
default_acceleration = 2000.0     # default acceleration in mm/sec²
arm_solution = linear_delta
x_axis_max_speed = 30000          # Maximum speed in mm/min
y_axis_max_speed = 30000          # Maximum speed in mm/min
z_axis_max_speed = 10000          # Maximum speed in mm/min
#max_speed = 0           # Overall Maximum speed in mm/min (0 disables it)
#save_g92 = false       # set to true to save G92 with M500
#save_wcs = false       # set to true to save WCS (G54 etc) with M500

[linear delta]
arm_length = 367.3
arm_radius = 199.6014

[planner]
junction_deviation = 0.05
#z_junction_deviation = 0.0
minimum_planner_speed = 0
planner_queue_size = 64

[actuator]
alpha.steps_per_mm = 320       # Steps per mm for alpha ( X ) stepper
alpha.step_pin = pe.14         # Pin for alpha stepper step signal
alpha.dir_pin = pb.0           # Pin for alpha stepper direction, add '!' to reverse direction
alpha.max_rate = 30000         # Maximum rate in mm/min
alpha.microsteps = 64          # sets micro stepping (default 32)

beta.steps_per_mm = 320        # Steps per mm for beta ( Y ) stepper
beta.step_pin = pe.9           # Pin for beta stepper step signal
beta.dir_pin = pe.11           # Pin for beta stepper direction, add '!' to reverse direction
beta.max_rate = 30000          # Maxmimum rate in mm/min
beta.microsteps = 64           # sets micro stepping (default 32)

gamma.steps_per_mm = 320    # Steps per mm for gamma ( Z ) stepper
gamma.step_pin = pe.8       # Pin for gamma stepper step signal
gamma.dir_pin = p7.1        # Pin for gamma stepper direction, add '!' to reverse direction
gamma.max_rate = 30000      # Maximum rate in mm/min
gamma.microsteps = 64       # sets micro stepping (default 32)

# Delta is first extruder, we set common stuff here instead of in extruder section
delta.steps_per_mm = 727.6500  # Steps per mm for extruder stepper
delta.step_pin = p6.11         # Pin for extruder step signal
delta.dir_pin = p6.10          # Pin for extruder dir signal ( add '!' to reverse direction )
delta.acceleration = 500       # Acceleration for the stepper motor mm/sec²
delta.max_rate = 1500.0        # Maximum rate in mm/min
delta.microsteps = 32          # sets micro stepping (default 32)

common.check_driver_errors = true     # set to true means the driver (tmc2660) error bits are checked
common.halt_on_driver_alarm = false   # if set to true means ON_HALT is entered on any error bits being set

[tmc2660]
# common settings for all tmc2660 drivers
common.max_current = 2800      # max current in milliamps

# settings specific to each tmc2660 driver instance
alpha.step_interpolation = true # set to true to turn on the step interpolation
beta.step_interpolation = true  # set to true to turn on the step interpolation
gamma.step_interpolation = true # set to true to turn on the step interpolation
delta.step_interpolation = false # set to true to turn on the step interpolation

# direct register setting... order and codes are chip dependent, values are in 32 bit Hex
# NOTE that the microsteps and current settings will be over written by the settings in current control and actuator
# M911 prints the current settings out in this format for copy/paste
#alpha.reg = 00204,981C0,A0000,C000E,E0060


# define the CS pins for the TMC2660 SPI
alpha.spi_cs_pin = gpio3_8
beta.spi_cs_pin = gpio7_12
gamma.spi_cs_pin = gpio7_7
delta.spi_cs_pin =  gpio2_8

[current control]
alpha.current  = 1.2    # X stepper motor current
beta.current   = 1.2    # Y stepper motor current
gamma.current  = 1.2    # Z stepper motor current
delta.current  = 0.7    # First extruder stepper motor current

[switch]
fan.enable = true # Enable this module
fan.input_on_command = M106 # Command that will turn this switch on
fan.input_off_command = M107 # Command that will turn this switch off
fan.output_pin = pe.6 # Pin this module controls
fan.output_type = sigmadeltapwm # PWM output settable with S parameter in the input_on_comand

psu.enable = true             # Enable this module
psu.input_on_command = M80    # Command that will turn this switch on
psu.input_off_command = M81   # Command that will turn this switch off
psu.output_pin = gpio7_5o!    # Pin this module controls (SSR1 requires open drain and inverting)
psu.output_type = digital     # Digital means this is just an on or off pin

[extruder]
hotend.enable = true             # Whether to activate the extruder module at all.
hotend.tool_id = 0               # T0 will select
# Firmware retract settings when using G10/G11, these are the defaults if not defined, must be defined for each extruder if not using the defaults
#hotend.retract_length =            3           # Retract length in mm
#hotend.retract_feedrate =         45           # Retract feedrate in mm/sec
#hotend.retract_recover_length =    0           # Additional length for recover
#hotend.retract_recover_feedrate =  8           # Recover feedrate in mm/sec (should be less than retract feedrate)
#hotend.retract_zlift_length =      0           # Z-lift on retract in mm, 0 disables
#hotend.retract_zlift_feedrate = 6000           # Z-lift feedrate in mm/min (Note mm/min NOT mm/sec)

[temperature control]
hotend.enable = true             # Whether to activate this ( 'hotend' ) module at all.
hotend.tool_id = 0               # T0 will select
hotend.thermistor_pin = ADC0_1   # Pin for the thermistor to read
hotend.heater_pin = P6.2         # Pin that controls the heater, set to nc if a readonly thermistor is being defined
hotend.thermistor = EPCOS100K    # See http://smoothieware.org/temperaturecontrol#toc5
hotend.designator = T            # Designator letter for this module
hotend.p_factor = 39.98          # Example settings
hotend.i_factor = 5.00           #
hotend.d_factor = 79.91          #

bed.enable = false                # Whether to activate this module at all.
bed.thermistor_pin = ADC0_2       # Pin for the thermistor to read
bed.heater_pin = p6.9             # Pin that controls the heater
bed.thermistor = Honeywell100K    # See http://smoothieware.org/temperaturecontrol#thermistor
bed.designator = B                # Designator letter for this module

# board temperature, no controller, readonly
board.enable = true                # Whether to activate this module at all.
board.thermistor_pin = ADC0_6      # Pin for the thermistor to read
board.designator = P               # Designator letter for this module
board.beta = 4334

[kill button]
enable = false         # Set to true to enable a kill button
pin = gpio4_4          # Kill button pin. on G2 p3
toggle_enable = false  # set to true to make it a toggle button (like an estop)
unkill_enable = true   # enable kill button hold for 2 seconds does unkill

[endstops]
common.debounce_ms = 0                   # debounce time in ms (actually 10ms min)
common.delta_homing = true               # Use delta homing strategy
#common.move_to_origin_after_home = true  # move to 0,0 after homing (default is true for delta)

# NOTE called minx becuase in this example they are plugged into the min ports even though they are used for max
minx.enable = true                   # enable an endstop
minx.pin = p4.0                      # pin
minx.homing_direction = home_to_max  # direction it moves to the endstop
minx.homing_position = 0             # the cartesian coordinate this is set to when it homes
minx.axis = X                        # the axis designator
minx.max_travel = 1000               # the maximum travel in mm before it times out
minx.fast_rate = 200                 # fast homing rate in mm/sec
minx.slow_rate = 20                  # slow homing rate in mm/sec
minx.retract = 10                    # bounce off endstop in mm
minx.limit_enable = false            # enable hard limit

miny.enable = true                  # enable an endstop
miny.pin = pf.9                     # pin
miny.homing_direction = home_to_max # direction it moves to the endstop
miny.homing_position = 0            # the cartesian coordinate this is set to when it homes
miny.axis = Y                       # the axis designator
miny.max_travel = 1000              # the maximum travel in mm before it times out
miny.fast_rate = 200                # fast homing rate in mm/sec
miny.slow_rate = 20                 # slow homing rate in mm/sec
miny.retract = 10                   # bounce off endstop in mm
miny.limit_enable = false           # enable hard limits

minz.enable = true                  # enable an endstop
minz.pin = pf.8                     # pin
minz.homing_direction = home_to_max # direction it moves to the endstop
minz.homing_position =  440         # the cartesian coordinate this is set to when it homes
minz.axis = Z                       # the axis designator
minz.max_travel = 1000              # the maximum travel in mm before it times out
minz.fast_rate = 200                # fast homing rate in mm/sec
minz.slow_rate = 20                 # slow homing rate in mm/sec
minz.retract = 10                   # bounce off endstop in mm
minz.limit_enable = false           # enable hard limits

#maxx.pin = pb.4
#maxy.pin = pb.5
#maxz.pin = pb.2

[zprobe]
enable = true              # Set to true to enable a zprobe
probe_pin = pb.3!^          # Pin probe is attached to, if NC remove the !
slow_feedrate = 5           # Mm/sec probe feed rate
fast_feedrate = 100         # Move feedrate mm/sec
probe_height = 5            # How much above bed to start probe
#leveling = three point      # leveling strategy to use
leveling = delta grid      # leveling strategy to use
#leveling = cartesian grid  # leveling strategy to use
calibration = delta        # calibration strategy to use

[delta calibration strategy]
# Example for the delta calibration strategy
radius = 110             # the probe radius
initial_height =  5      # Height at which to start probing

[delta grid leveling strategy]
# Example for the delta grid leveling strategy
radius = 120           # Grid radius in millimeters
size = 11              # Grid size, must be an odd number
do_home = true         # Whether to home before calibration
save = true            # Whether to automatically save the grid
initial_height = 5     # Height at which to start probling

[voltage monitor]
vmotor = ADC0_7  # monitors motor voltage (Vbb) needed as drivers cannot be setup until this is on
vfet = ADC0_5    # monitors fet voltage

[network]
enable = true
shell_enable = true
ftp_enable = true
webserver_enable = true
ip_address = auto              # uses dhcp to get ip address (default)
#ip_address = 192.168.1.101
#ip_gateway = 192.168.1.254
#ip_mask = 255.255.255.0


